/*
 * generated by Xtext
 */
package org.slf.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.slf.iot.*

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class IotGenerator implements IGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {

		for (e : resource.allContents.toIterable.filter(typeof(Dispositivo))) {
			fsa.generateFile("iot/" + e.name + ".java", e.compile)
			fsa.generateFile("interfaces/" + e.name + "I.java", e.compileI)
		}
	}

	def compile(Dispositivo dispositivo) {
		'''
		package iot;
		
		import interfaces.*;
		
		public class «dispositivo.name» «IF dispositivo.superType != null»extends «dispositivo.superType.name» «ENDIF»{
			«FOR etiqueta: dispositivo.etiquetas»
				public static final String «etiqueta.name» = "«etiqueta.value»";
			«ENDFOR»
			
			enum Eventos{
				«FOR evento: dispositivo.eventos»
					«evento.name», 
				«ENDFOR»
			}

			public void run(Evento e){
				
				switch ( e ) {
					«FOR transicion: dispositivo.transiciones»
					case "«transicion.evento.name»":
						estadoActual = new «transicion.estado.name» 
					break;
					«ENDFOR»
				}
			}
			
		}
		
	«FOR estado: dispositivo.estados»
		private class «estado.name» implements «dispositivo.name»I{
			public void handle(){
				«FOR ele : estado.elementos»
					«IF ele instanceof Variable»
						«IF ele.expression instanceof IntConstant»
							int «ele.name» = «(ele.expression as IntConstant).value»;
						«ENDIF»
						«IF ele.expression instanceof StringConstant»
							String «ele.name» = "«(ele.expression as StringConstant).value»";
						«ENDIF»
						«IF ele.expression instanceof BoolConstant»
							boolean «ele.name» = «(ele.expression as BoolConstant).value»;
						«ENDIF»
					«ENDIF»
				«ENDFOR»
			}
		}	
	«ENDFOR»
		
	'''
	}

	def compileI(Dispositivo dispositivo) {
		'''
		package interfaces;

		public interface «dispositivo.name»I «IF dispositivo.superType != null»extends «dispositivo.superType.name» «ENDIF»{
				public void handle();
		}
	'''
	}
}
